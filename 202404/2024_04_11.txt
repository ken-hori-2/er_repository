Done:
  AWS Cloud Plactitioner メッセージングとキューイングまで完了

Learning:
  Auto Scaling : 需要がある時はEC2のインスタンスを追加で立てて、拡張する。
　　　　　　　　　需要がない場合は、削除して縮小する。

　ELB : 処理が混み合っていない、少ないEC2に優先的にリクエストを送る様にする
　　　　コーヒーショップのレジに案内する係の人の様な役割
　　　　EC2(レジ)と処理(バリスタ)を直接繋げているわけではなく、互いの状態は知らない
　　　　> ELBを通してEC2から処理をリクエストする
　　　　> 疎結合なアーキテクチャ
　　　　> マイクロサービスのアプローチ

　メッセージングとキューイング : 
　　　　直接コンポーネントがやりとりすると、どちらかが停止した際に、リクエストを受けられず、時間切れでキャンセルになってしまう。
　　　　> そこでキューを導入することでリクエストをキューに保存していき、その中から順に処理していくことで、一時的に停止しても再開した時に順に処理できる様になる。

Todo:
  次回、その他のコンピューティングサービスからはじめる
